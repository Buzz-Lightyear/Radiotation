package main

import (
	"bytes"
	"encoding/gob"
	"encoding/hex"
	"fmt"
	"log"

	"github.com/bcspragu/Radiotation/db"
	"github.com/bcspragu/Radiotation/radio"
)

const (
	tracks = "0dff91020102ff920001ff8600003bff8503010105547261636b01ff8600010401074172746973747301ff8a0001044e616d65010c0001024944010c000105416c62756d01ff8c0000001dff890201010e5b5d6d757369632e41727469737401ff8a0001ff8800001dff870301010641727469737401ff8800010101044e616d65010c00000028ff8b03010105416c62756d01ff8c00010201044e616d65010c000106496d6167657301ff900000001cff8f0201010d5b5d6d757369632e496d61676501ff900001ff8e000030ff8d03010105496d61676501ff8e000103010557696474680104000106486569676874010400010355524c010c000000fe09afff9200080102010b506f7374204d616c6f6e650001083220436861696e7a0001134d6f6e6579204d616465204d6520446f204974011631797341764f644a67556a633643714f51786570617a01010f53746f6e6579202844656c75786529010301fe050001fe0500014068747470733a2f2f692e7363646e2e636f2f696d6167652f313765363861326530336465373461313134626636363039643639663962646266363032396637300001fe025801fe0258014068747470733a2f2f692e7363646e2e636f2f696d6167652f663234346166383535643534656439343439373463356264326430613836326336383239656662390001ff8001ff80014068747470733a2f2f692e7363646e2e636f2f696d6167652f3938363862333039626434376236316530343563636134616464643931316363646563313139363100000001030107506961204d696100010b43687269732042726f776e0001045479676100010b446f20497420416761696e01163732427a346369525a504263565377306e725a44486901010b446f20497420416761696e010301fe050001fe0500014068747470733a2f2f692e7363646e2e636f2f696d6167652f346336303137306365666435333064333434373731643162653832333363366636613830323663350001fe025801fe0258014068747470733a2f2f692e7363646e2e636f2f696d6167652f306363333966383664623763646438343633343237613431636430336462326234663463626161350001ff8001ff80014068747470733a2f2f692e7363646e2e636f2f696d6167652f39313231633132353263333465366239343536633061326466313132396461646139303639363834000000010101045275737300010c446f204974204d7973656c660116356d4231625755385675655956787576634c506e324201011554686572652773205265616c6c79204120576f6c66010301fe050001fe0500014068747470733a2f2f692e7363646e2e636f2f696d6167652f383936653366303662373937393262393362623936656533663334343461356138376365383435660001fe025801fe0258014068747470733a2f2f692e7363646e2e636f2f696d6167652f376635353131656435666430633364303261653139363535613236613962336565363933376635620001ff8001ff80014068747470733a2f2f692e7363646e2e636f2f696d6167652f633039623837613730333538343862343133623634326536663366613136613539393266343335340000000101010d416c65782026205369657272610001124c6974746c6520446f20596f75204b6e6f77011631616c6d4348647366696b525066564239567245645401010d497427732041626f7574205573010301fe050001fe04f8014068747470733a2f2f692e7363646e2e636f2f696d6167652f313536303535656661373464383765626566653831353631626236633961646665346637313336350001fe025801fe0254014068747470733a2f2f692e7363646e2e636f2f696d6167652f633839663166313165333861326636383533653631633664303430613861346236656636383533300001ff8001ff80014068747470733a2f2f692e7363646e2e636f2f696d6167652f373439656263643134336561666535663363333536636265373735363237616362653232613530360000000101010e4d6f6e74656c6c204a6f7264616e0001145468697320497320486f7720576520446f20497401163675514b756f6e545538564b427a3553485a755158440101145468697320497320486f7720576520446f204974010301fe050001fe04e4014068747470733a2f2f692e7363646e2e636f2f696d6167652f633532373133326532633135376532336132313835653964336662383462323731666564333932630001fe025801fe024a014068747470733a2f2f692e7363646e2e636f2f696d6167652f643137353532396532373031663366306235353365316139623236663361643234323837613732300001ff80017e014068747470733a2f2f692e7363646e2e636f2f696d6167652f663531346433633333376230666166633033393463343535656134323336383833333034643931660000000103010a54616e6e657220466f7800010a54617920416c6573696100010d44796c616e204d61747468657700010d576520446f2049742042657374011630394575347a7455437771675671696b3165516d437201010d576520446f2049742042657374010301fe050001fe0500014068747470733a2f2f692e7363646e2e636f2f696d6167652f346434373931616564643762653933366561333738343131313131363039663131633430343765370001fe025801fe0258014068747470733a2f2f692e7363646e2e636f2f696d6167652f396163396233356362316130306637363434623535666631613463376239643936343261393531390001ff8001ff80014068747470733a2f2f692e7363646e2e636f2f696d6167652f3539313662656262336339663464373064623130643466333835303235396631306234663761306600000001010111456c65766174696f6e20576f727368697000010b446f20497420416761696e011633694f706948446f62785a4f375334703959324667750101105468657265204973206120436c6f7564010301fe050001fe0500014068747470733a2f2f692e7363646e2e636f2f696d6167652f616337343232333239653839383366346663393834653839323834636133326361643666366664630001fe025801fe0258014068747470733a2f2f692e7363646e2e636f2f696d6167652f316231386262653834656337326362376164613335643535376336373237396330653166373962620001ff8001ff80014068747470733a2f2f692e7363646e2e636f2f696d6167652f633362633030313934376630313231656631323335656437396334386530323635653062633562330000000101010a537465656c792044616e00010b446f20497420416761696e0116324273745251476f6473686a477065444751694e676f01011243616e277420427579204120546872696c6c010301fe050001fe04f0014068747470733a2f2f692e7363646e2e636f2f696d6167652f663337323833313263346339613366353334376562313635343366623165303433396562613663660001fe025801fe0250014068747470733a2f2f692e7363646e2e636f2f696d6167652f393332613762386231373566323035376131303935343561393961343735616564643361333534350001ff80017e014068747470733a2f2f692e7363646e2e636f2f696d6167652f35396235383431313266333132643330373138353564623637356163616165306362373631663463000000"
	room   = "481000152a64622e726f756e64526f62696e526f7461746f72ff9303010111726f756e64526f62696e526f7461746f7201ff9400010201064f666673657401040001014e010400000004ff940100"
)

func main() {
	fmt.Println(decodeRotator(room))
}

func printTracks() {
	tracks, err := decodeTracks(tracks)
	if err != nil {
		log.Fatal(err)
	}
	for _, t := range tracks {
		t.Album = radio.Album{}
		fmt.Printf("%+v\n", t)
	}
}

func decodeTracks(h string) ([]radio.Track, error) {
	decoded, err := hex.DecodeString(h)
	if err != nil {
		return nil, err
	}
	var tracks []radio.Track
	if err := gob.NewDecoder(bytes.NewReader(decoded)).Decode(&tracks); err != nil {
		return nil, err
	}

	return tracks, nil
}

func decodeRotator(h string) (db.Rotator, error) {
	decoded, err := hex.DecodeString(h)
	if err != nil {
		return nil, err
	}
	var rot db.Rotator
	if err := gob.NewDecoder(bytes.NewReader(decoded)).Decode(&rot); err != nil {
		return nil, err
	}

	return rot, nil
}
